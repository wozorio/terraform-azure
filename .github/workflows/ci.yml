name: "CI"

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  validate:
    name: Terraform Validate
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Checkout bash-scripts repo
        uses: actions/checkout@v2
        with:
          repository: wozorio/bash-scripts
          path: bash-scripts

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        env:
          TERRAFORM_VERSION: 1.0.9
          TERRAFORM_WRAPPER: false # when enabled JSON output of Terraform Plan is not properly parsed
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: ${{ env.TERRAFORM_WRAPPER }}

      - name: Ensure Terraform code is properly formatted
        run: terraform fmt --recursive -check

      - name: Login to Azure
        run: |
          ./bash-scripts/azure-cli-login.sh \
            ${{ secrets.SUBSCRIPTION_ID }} \
            ${{ secrets.SERVICE_PRINCIPAL_ID }} \
            ${{ secrets.SERVICE_PRINCIPAL_SECRET }} \
            ${{ secrets.TENANT_ID }}

      - name: Terraform Init
        run: |
          ACCESS_KEY=$(az storage account keys list \
            --account-name ${{ env.STORAGE_ACCOUNT_NAME }} \
            --query "[0].value" | tr -d '"')

          terraform init -backend-config="access_key=${ACCESS_KEY}"
        env:
          STORAGE_ACCOUNT_NAME: stterraformwozorio

      - name: Terraform Validate
        run: terraform validate

      - name: Pull Checkov image
        run: docker pull bridgecrew/checkov:latest

      - name: Scan Terraform code with Checkov
        env:
          TERRAFORM_DIRS: /tf /tf/.terraform
        run: |
          for dir in ${{ env.TERRAFORM_DIRS }}; do 
            echo "Scanning directory ${dir}"
            docker run \
              --tty \
              --volume "$(pwd)":/tf bridgecrew/checkov:latest \
              --directory "${dir}" \
              --framework terraform \
              --check CKV_AZURE* \
              --soft-fail
          done
