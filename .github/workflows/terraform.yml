name: 'Terraform'

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: playground

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Logs in to Azure subscription
    - name: Login to Azure
      run: |
        az login \
          --service-principal \
          --username ${{ env.SERVICE_PRINCIPAL_ID }} \
          --password ${{ secrets.SERVICE_PRINCIPAL_SECRET }} \
          --tenant ${{ env.TENANT_ID }}
          
          az account set -s ${{ env.SUBSCRIPTION_ID }}
      env:
        SERVICE_PRINCIPAL_ID: d44ee249-c468-475e-9e92-1720b68361ea
        TENANT_ID: 0ae51e19-07c8-4e4b-bb6d-648ee58410f4
        SUBSCRIPTION_ID: ba8893c8-1e1c-4b55-85e1-b4d264b94274

# Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -var 'admin_password=${{ secrets.ADMIN_PASSWORD }}'

      # On push to master, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve
      env:
        ARM_SUBSCRIPTION_ID: ba8893c8-1e1c-4b55-85e1-b4d264b94274
        ARM_CLIENT_ID: d44ee249-c468-475e-9e92-1720b68361ea
        ARM_CLIENT_SECRET: ${{ secrets.SERVICE_PRINCIPAL_SECRET }}
        ARM_TENANT_ID: 0ae51e19-07c8-4e4b-bb6d-648ee58410f4
